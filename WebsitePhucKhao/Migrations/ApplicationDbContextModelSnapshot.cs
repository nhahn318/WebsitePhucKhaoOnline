// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebsitePhucKhao.Models;

#nullable disable

namespace WebsitePhucKhao.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("GiangVienMaGiangVien")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MaGiangVien")
                        .HasColumnType("int");

                    b.Property<int?>("MaNhanVienPhongDaoTao")
                        .HasColumnType("int");

                    b.Property<int?>("MaSinhVien")
                        .HasColumnType("int");

                    b.Property<int?>("NhanVienPhongDaoTaoMaNhanVienPhongDaoTao")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("GiangVienMaGiangVien");

                    b.HasIndex("MaSinhVien")
                        .IsUnique()
                        .HasFilter("[MaSinhVien] IS NOT NULL");

                    b.HasIndex("NhanVienPhongDaoTaoMaNhanVienPhongDaoTao");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.ChuyenNganh", b =>
                {
                    b.Property<int>("MaChuyenNganh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChuyenNganh"));

                    b.Property<int?>("MaKhoa")
                        .HasColumnType("int");

                    b.Property<string>("TenChuyenNganh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaChuyenNganh");

                    b.HasIndex("MaKhoa");

                    b.ToTable("ChuyenNganhs");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.DonPhucKhao", b =>
                {
                    b.Property<int>("MaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDon"));

                    b.Property<string>("CaThi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaDiemThi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("DiemHienTai")
                        .HasColumnType("real");

                    b.Property<float>("DiemMongMuon")
                        .HasColumnType("real");

                    b.Property<int>("HocKy")
                        .HasColumnType("int");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaGiangVien")
                        .HasColumnType("int");

                    b.Property<int?>("MaNhanVienPhongDaoTao")
                        .HasColumnType("int");

                    b.Property<int>("MaSinhVien")
                        .HasColumnType("int");

                    b.Property<string>("MonHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayGui")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayThi")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhomLop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhongThi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDon");

                    b.HasIndex("MaGiangVien");

                    b.HasIndex("MaNhanVienPhongDaoTao");

                    b.HasIndex("MaSinhVien");

                    b.ToTable("DonPhucKhaos");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.GiangVien", b =>
                {
                    b.Property<int>("MaGiangVien")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaKhoa")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("MaGiangVien");

                    b.HasIndex("MaKhoa");

                    b.ToTable("GiangViens");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.HinhAnhBaiThi", b =>
                {
                    b.Property<int>("MaHinhAnh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHinhAnh"));

                    b.Property<string>("DuongDanFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaDon")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTaiLen")
                        .HasColumnType("datetime2");

                    b.HasKey("MaHinhAnh");

                    b.HasIndex("MaDon");

                    b.ToTable("HinhAnhBaiThis");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.KetQuaPhucKhao", b =>
                {
                    b.Property<int>("MaDon")
                        .HasColumnType("int");

                    b.Property<float>("DiemCuoiCung")
                        .HasColumnType("real");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaGiangVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDon");

                    b.HasIndex("MaGiangVien");

                    b.ToTable("KetQuaPhucKhaos");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.Khoa", b =>
                {
                    b.Property<int>("MaKhoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhoa"));

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaKhoa");

                    b.ToTable("Khoas");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.NhanVienPhongDaoTao", b =>
                {
                    b.Property<int>("MaNhanVienPhongDaoTao")
                        .HasColumnType("int");

                    b.Property<string>("ChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("MaNhanVienPhongDaoTao");

                    b.ToTable("NhanVienPhongDaoTaos");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.SinhVien", b =>
                {
                    b.Property<int>("MaSinhVien")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaChuyenNganh")
                        .HasColumnType("int");

                    b.Property<int>("MaKhoa")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSinhVien");

                    b.HasIndex("MaChuyenNganh");

                    b.HasIndex("MaKhoa");

                    b.ToTable("SinhViens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebsitePhucKhao.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebsitePhucKhao.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebsitePhucKhao.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebsitePhucKhao.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.ApplicationUser", b =>
                {
                    b.HasOne("WebsitePhucKhao.Models.GiangVien", "GiangVien")
                        .WithMany()
                        .HasForeignKey("GiangVienMaGiangVien");

                    b.HasOne("WebsitePhucKhao.Models.SinhVien", "SinhVien")
                        .WithOne("User")
                        .HasForeignKey("WebsitePhucKhao.Models.ApplicationUser", "MaSinhVien");

                    b.HasOne("WebsitePhucKhao.Models.NhanVienPhongDaoTao", "NhanVienPhongDaoTao")
                        .WithMany()
                        .HasForeignKey("NhanVienPhongDaoTaoMaNhanVienPhongDaoTao");

                    b.Navigation("GiangVien");

                    b.Navigation("NhanVienPhongDaoTao");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.ChuyenNganh", b =>
                {
                    b.HasOne("WebsitePhucKhao.Models.Khoa", "Khoa")
                        .WithMany("ChuyenNganhs")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.DonPhucKhao", b =>
                {
                    b.HasOne("WebsitePhucKhao.Models.GiangVien", "GiangVien")
                        .WithMany("DonPhucKhaos")
                        .HasForeignKey("MaGiangVien")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WebsitePhucKhao.Models.NhanVienPhongDaoTao", "NhanVienPhongDaoTao")
                        .WithMany("DonPhucKhaos")
                        .HasForeignKey("MaNhanVienPhongDaoTao")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WebsitePhucKhao.Models.SinhVien", "SinhVien")
                        .WithMany("DonPhucKhaos")
                        .HasForeignKey("MaSinhVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiangVien");

                    b.Navigation("NhanVienPhongDaoTao");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.GiangVien", b =>
                {
                    b.HasOne("WebsitePhucKhao.Models.Khoa", "Khoa")
                        .WithMany()
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.HinhAnhBaiThi", b =>
                {
                    b.HasOne("WebsitePhucKhao.Models.DonPhucKhao", "DonPhucKhao")
                        .WithMany("HinhAnhBaiThis")
                        .HasForeignKey("MaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonPhucKhao");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.KetQuaPhucKhao", b =>
                {
                    b.HasOne("WebsitePhucKhao.Models.DonPhucKhao", "DonPhucKhao")
                        .WithOne("KetQuaPhucKhao")
                        .HasForeignKey("WebsitePhucKhao.Models.KetQuaPhucKhao", "MaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebsitePhucKhao.Models.GiangVien", "GiangVien")
                        .WithMany("KetQuaPhucKhaos")
                        .HasForeignKey("MaGiangVien")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("DonPhucKhao");

                    b.Navigation("GiangVien");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.SinhVien", b =>
                {
                    b.HasOne("WebsitePhucKhao.Models.ChuyenNganh", "ChuyenNganh")
                        .WithMany("SinhViens")
                        .HasForeignKey("MaChuyenNganh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebsitePhucKhao.Models.Khoa", "Khoa")
                        .WithMany()
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChuyenNganh");

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.ChuyenNganh", b =>
                {
                    b.Navigation("SinhViens");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.DonPhucKhao", b =>
                {
                    b.Navigation("HinhAnhBaiThis");

                    b.Navigation("KetQuaPhucKhao");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.GiangVien", b =>
                {
                    b.Navigation("DonPhucKhaos");

                    b.Navigation("KetQuaPhucKhaos");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.Khoa", b =>
                {
                    b.Navigation("ChuyenNganhs");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.NhanVienPhongDaoTao", b =>
                {
                    b.Navigation("DonPhucKhaos");
                });

            modelBuilder.Entity("WebsitePhucKhao.Models.SinhVien", b =>
                {
                    b.Navigation("DonPhucKhaos");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
